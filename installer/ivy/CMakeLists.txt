cmake_minimum_required(VERSION 2.8)

PROJECT("muhkuh")

INCLUDE(ExternalProject)

# Generate a version number from a file or VCS.
INCLUDE(../../cmake/muhkuh_version.cmake)


GET_FILENAME_COMPONENT(MUHKUH_WIN32_INSTALL "../../build_windows32/install" ABSOLUTE)
GET_FILENAME_COMPONENT(MUHKUH_WIN64_INSTALL "../../build_windows64/install" ABSOLUTE)


SET(CPACK_PACKAGE_VERSION_MAJOR ${MUHKUH_VERSION_MAJ})
SET(CPACK_PACKAGE_VERSION_MINOR ${MUHKUH_VERSION_MIN})
SET(CPACK_PACKAGE_VERSION_PATCH ${MUHKUH_VERSION_SUB})
SET(VERSION_FULL ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})


SET(PACKAGE_CMAKE_ARGS "")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DMUHKUH_WIN32_INSTALL=${MUHKUH_WIN32_INSTALL}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DMUHKUH_WIN64_INSTALL=${MUHKUH_WIN64_INSTALL}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DCPACK_PACKAGE_VERSION_MAJOR=${CPACK_PACKAGE_VERSION_MAJOR}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DCPACK_PACKAGE_VERSION_MINOR=${CPACK_PACKAGE_VERSION_MINOR}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DCPACK_PACKAGE_VERSION_PATCH=${CPACK_PACKAGE_VERSION_PATCH}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DVERSION_FULL=${VERSION_FULL}")
LIST(APPEND PACKAGE_CMAKE_ARGS "-DARTIFACT_LISTS_OUTPUT=${CMAKE_CURRENT_BINARY_DIR}/artifacts")

ExternalProject_Add(TARGET_lua_plugin_romloader
                    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lua_plugin_romloader
                    CMAKE_ARGS ${PACKAGE_CMAKE_ARGS}
                    INSTALL_COMMAND make package
)

ExternalProject_Add(TARGET_muhkuh_base_cli
                    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/muhkuh_base_cli
                    CMAKE_ARGS ${PACKAGE_CMAKE_ARGS}
                    INSTALL_COMMAND make package
)

#----------------------------------------------------------------------------

